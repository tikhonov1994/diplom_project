version: '3.9'

include:
  - ./deploy/mongo/docker-compose.yml
#  - ./deploy/elk/docker-compose.yml
#  - ./deploy/clickhouse/docker-compose.yml
  - ./deploy/elastic/docker-compose.yml
  - ./deploy/kafka/docker-compose.yml
  - ./deploy/rabbitmq/docker-compose.yml

networks:
  application_network:
    driver: bridge

x-net-topology:
  &container_networks
  networks:
    - application_network
    - mongo_network
#    - elk_network
#    - clickhouse_network
    - elastic_network
    - kafka_network
    - rabbitmq_network

services:
  db:
    container_name: test_postgres
    image: postgres:13.0-alpine
    env_file:
      - .env
    ports:
      - "5432:5432"
    <<: *container_networks

  redis:
    container_name: test_redis
    image: redis:7.0.5
    restart: always
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5
    expose:
      - "6379"
    ports:
      - "6379:6379"
    <<: *container_networks

  api:
    container_name: test_api
    build: ./api
    image: movies_api
    depends_on:
      elastic_migrate:
        condition: service_completed_successfully
      redis:
        condition: service_started
    expose:
      - "8001"
    ports:
      - "8001:8001"
    env_file:
      - .env
    <<: *container_networks

  auth:
    container_name: test_auth
    build: ./auth
    image: movies_auth
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_started
    expose:
      - "8002"
    ports:
      - "8002:8002"
    env_file:
      - .env
    <<: *container_networks

  ugc_api:
    container_name: test_ugc_api
    hostname: ugc
    build: ./ugc
    image: movies_ugc
    depends_on:
      broker:
        condition: service_started
    expose:
      - "8003"
    ports:
      - "8003:8003"
    env_file:
      - .env
    <<: *container_networks

  social_api:
    container_name: test_social_api
    hostname: social_api
    build: ./social
    image: movies_social
    depends_on:
      mongos:
        condition: service_healthy
    expose:
      - "8010"
    ports:
      - "8010:8010"
    env_file:
      - .env
    <<: *container_networks

  notification_api:
    container_name: test_notification_api
    build: ./notification
    depends_on:
      db:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    ports:
      - "8005:8005"
    expose:
      - "8005"
    env_file:
      - .env
    <<: *container_networks

  tests:
    container_name: tests
    build: ./tests
    env_file:
      - .env
    depends_on:
      api:
        condition: service_started
      auth:
        condition: service_started
      ugc_api:
        condition: service_started
      social_api:
        condition: service_started
      notification_api:
        condition: service_started
      elasticsearch:
        condition: service_healthy
    <<: *container_networks
